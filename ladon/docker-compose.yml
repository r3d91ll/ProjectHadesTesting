version: '3.8'

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  prometheus_data: {}
  grafana_data: {}
  arize_data: {}

services:

  # NVIDIA DCGM exporter for GPU metrics
  dcgm-exporter:
    image: nvcr.io/nvidia/k8s/dcgm-exporter:3.1.7-3.1.4-ubuntu20.04
    restart: unless-stopped
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    ports:
      - "9400:9400"
    command: -f /etc/dcgm-exporter/dcp-metrics-included.csv

  # Prometheus - Metrics database
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"

  # Node Exporter - Hardware, OS, and GPU metrics
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - $HOME/gpu_metrics:/node_exporter_metrics:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.textfile.directory=/node_exporter_metrics'
      - '--collector.textfile'
      - '--log.level=debug'
    ports:
      - "9100:9100"

  # Process Exporter - Process metrics
  process-exporter:
    image: ncabatoff/process-exporter:0.7.10
    container_name: process-exporter
    restart: unless-stopped
    privileged: true
    volumes:
      - ./prometheus/process-exporter.yml:/config/process-exporter.yml
      - /proc:/host/proc:ro
    command:
      - '--procfs=/host/proc'
      - '--config.path=/config/process-exporter.yml'
    ports:
      - "9256:9256"

  # Removed cadvisor due to compatibility issues
  # We'll rely on DCGM for GPU metrics and node-exporter for system metrics

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/custom.ini:/etc/grafana/grafana.ini
      - ./scripts:/scripts
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin_password
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_SECURITY_COOKIE_SAMESITE=none
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SECURITY_CSRF_ALWAYS_CHECK=false
      - GF_LIVE_ALLOWED_ORIGINS=http://localhost:5173
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Editor
      - GF_FEATURE_TOGGLES_ENABLE=publicDashboards
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  # Arize Phoenix - ML Model Monitoring
  arize-phoenix:
    image: arizephoenix/phoenix:latest
    container_name: arize-phoenix
    restart: unless-stopped
    environment:
      - PHOENIX_DB_PATH=/phoenix/data
    volumes:
      - arize_data:/phoenix/data
    ports:
      - "8084:6006"  # Phoenix UI
      
  # Custom GPU Metrics via Node Exporter
  # Note: GPU metrics are collected on the host via the gpu_metrics_exporter.sh script
  # and exposed through node-exporter's textfile collector
