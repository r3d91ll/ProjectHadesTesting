version: '3.8'

networks:
  monitoring-network:
    driver: bridge
  hades-monitoring:
    external: true

volumes:
  prometheus_data: {}
  grafana_data: {}
  arize_data: {}

services:
  # Prometheus - Metrics database
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - monitoring-network
      - hades-monitoring

  # Node Exporter - Hardware and OS metrics
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring-network

  # Process Exporter - Process metrics
  process-exporter:
    image: ncabatoff/process-exporter:0.7.10
    container_name: process-exporter
    restart: unless-stopped
    privileged: true
    volumes:
      - ./prometheus/process-exporter.yml:/config/process-exporter.yml
      - /proc:/host/proc:ro
    command:
      - '--procfs=/host/proc'
      - '--config.path=/config/process-exporter.yml'
    ports:
      - "9256:9256"
    networks:
      - monitoring-network

  # cAdvisor - Container metrics (modified to avoid host docker socket)
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    restart: unless-stopped
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      # Removed /var/lib/docker volume that was causing issues
      - /dev/disk/:/dev/disk:ro
    command:
      - '--docker_only=false'
      - '--disable_metrics=disk,diskIO,network,tcp,udp,percpu,sched'
    ports:
      - "8082:8080"
    networks:
      - monitoring-network

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin_password
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    networks:
      - monitoring-network
      - hades-monitoring
    depends_on:
      - prometheus

  # Arize Phoenix - ML Model Monitoring
  arize-phoenix:
    image: arizephoenix/phoenix:latest
    container_name: arize-phoenix
    restart: unless-stopped
    volumes:
      - arize_data:/phoenix/data
    ports:
      - "6006:6006"  # TensorBoard
      - "8084:8080"  # Phoenix UI (changed from 8080 to avoid conflict)
    networks:
      - monitoring-network
      - hades-monitoring
