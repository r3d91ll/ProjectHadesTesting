# Neo4j Storage Backend Configuration Template
# This is a template configuration for Neo4j storage backend
# Copy this to your config.d/ directory with a prefix like "90-neo4j.yaml" to override defaults

# Main Neo4j configuration
neo4j:
  # Connection settings
  connection:
    uri: "${NEO4J_URI}"  # e.g., "bolt://localhost:7687"
    username: "${NEO4J_USERNAME}"
    password: "${NEO4J_PASSWORD}"
    database: "rag"
    connection_timeout: 60  # seconds
    max_connection_lifetime: 3600  # seconds
    max_connection_pool_size: 50
    connection_acquisition_timeout: 60  # seconds
    
  # Session settings
  session:
    fetch_size: 1000
    bookmark_timeout: 30  # seconds
    
  # Transaction settings
  transaction:
    timeout: 120  # seconds
    metadata:
      application: "rag-dataset-builder"
      user: "${USER}"
    
  # Batch processing settings
  batch:
    size: 1000
    parallel_execution: true
    max_retry_time: 60  # seconds
    
  # Schema setup
  schema:
    auto_create: true
    indices:
      - "CREATE INDEX node_type_idx IF NOT EXISTS FOR (n:Node) ON (n.type)"
      - "CREATE INDEX item_id_idx IF NOT EXISTS FOR (n:Node) ON (n.item_id)"
      - "CREATE INDEX relationship_type_idx IF NOT EXISTS FOR ()-[r]-() ON (r.relationship_type)"
    constraints:
      - "CREATE CONSTRAINT unique_node_id IF NOT EXISTS FOR (n:Node) REQUIRE n.id IS UNIQUE"
      
  # Data models
  models:
    nodes:
      document:
        labels: ["Document", "Node"]
        properties:
          - id
          - title
          - file_type
          - created
          - modified
          - license
      chunk:
        labels: ["Chunk", "Node"]
        properties:
          - id
          - content
          - position
          - document_id
      entity:
        labels: ["Entity", "Node"]
        properties:
          - id
          - name
          - type
      category:
        labels: ["Category", "Node"]
        properties:
          - id
          - name
    relationships:
      contains:
        start_node: "Document"
        end_node: "Chunk"
        properties:
          - position
      next:
        start_node: "Chunk"
        end_node: "Chunk"
        properties: []
      belongs_to:
        start_node: "Document"
        end_node: "Category"
        properties: []
      references:
        start_node: "Chunk"
        end_node: "Entity"
        properties:
          - confidence
      similar_to:
        start_node: "Chunk"
        end_node: "Chunk"
        properties:
          - similarity
          
  # Performance monitoring
  monitoring:
    enabled: true
    metrics:
      connection_pool: true
      query_execution_time: true
      active_connections: true
      
    # Integration with Arize Phoenix
    arize_phoenix:
      enabled: true
      track_queries: true
      track_latency: true
      
    # Integration with Prometheus (for GPU monitoring)
    prometheus:
      enabled: true
      textfile_collector:
        enabled: true
        neo4j_metrics_file: "/var/lib/node_exporter/textfile_collector/neo4j.prom"
        update_interval: 30  # seconds
      
  # Backup and maintenance
  backup:
    enabled: true
    schedule: "0 0 * * *"  # Daily at midnight (cron format)
    destination_dir: "${directories.backup}/neo4j"
    retention_days: 7
